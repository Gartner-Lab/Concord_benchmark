library(VisCello)
cello("data/CE_CB/C.elegans_C.briggsae_Embryo_Single_Cell/Cello/")
dim(Eset)
dim(eset)
head(fData(eset))
table(fData(eset)$species)
tail(fData(eset))
cb_genes = fData(eset)[fData(eset)$species == "C.briggsae"]
cb_genes = fData(eset)[fData(eset)$species == "C.briggsae",]
ce_genes = fData(eset)[fData(eset)$species == "C.elegans",]
View(ce_genes)
View(cb_genes)
intersect(cb_genes$gene_short_name, ce_genes$gene_short_name)
length(intersect(cb_genes$gene_short_name, ce_genes$gene_short_name))
fmeta <- fData(eset)
head(pData(eset))
table(pData(eset)$species)
exprs_data <- exprs(eset)
fdata <- fData(eset)
pdata <- pData(eset)
c_briggsae_cells <- pdata$species == "C.briggsae"
c_elegans_cells <- pdata$species == "C.elegans"
ce_genes_shared <- ce_genes[ce_genes$gene_short_name %in% shared_genes, ]
ce_genes = fData(eset)[fData(eset)$species == "C.elegans",]
cb_genes = fData(eset)[fData(eset)$species == "C.briggsae"]
ce_genes_shared <- ce_genes[ce_genes$gene_short_name %in% shared_genes, ]
ce_genes = fData(eset)[fData(eset)$species == "C.elegans",]
cb_genes = fData(eset)[fData(eset)$species == "C.briggsae",]
shared_genes = intersect(cb_genes$gene_short_name, ce_genes$gene_short_name)
ce_genes_shared <- ce_genes[ce_genes$gene_short_name %in% shared_genes, ]
cb_genes_shared <- cb_genes[cb_genes$gene_short_name %in% shared_genes, ]
head(ce_genes_shared )
exprs_ce_shared <- exprs_data[rownames(ce_genes_shared), c_elegans_cells]
exprs_cb_shared <- exprs_data[rownames(cb_genes_shared), c_briggsae_cells]
rownames(exprs_cb_shared)
ce_genes_shared <- ce_genes[match(shared_genes, ce_genes$gene_short_name), ]
cb_genes_shared <- cb_genes[match(shared_genes, cb_genes$gene_short_name), ]
exprs_ce_shared <- exprs_data[rownames(ce_genes_shared), c_elegans_cells]
exprs_cb_shared <- exprs_data[rownames(cb_genes_shared), c_briggsae_cells]
if (!all(ce_genes_shared$gene_short_name == cb_genes_shared$gene_short_name)) {
stop("The gene order for shared genes is not consistent between species.")
}
all(ce_genes_shared$gene_short_name == cb_genes_shared$gene_short_name)
exprs_shared <- cbind(exprs_cb_shared, exprs_ce_shared)
fdata_shared <- ce_genes_shared
head(fdata_shared)
fdata_shared$ce_rowname = rownames(ce_genes_shared)
fdata_shared$cb_rowname = rownames(cb_genes_shared)
head(fdata_shared)
c_elegans_cells
pdata_shared <- rbind(pdata[c_briggsae_cells, ], pdata[c_elegans_cells, ])
head(pdata_shared )
eset_shared <- ExpressionSet(assayData = exprs_shared,
phenoData = AnnotatedDataFrame(pdata_shared),
featureData = AnnotatedDataFrame(fdata_shared))
eset_shared <- ExpressionSet(assayData = assayDataNew("environment", exprs = exprs_shared),
phenoData = AnnotatedDataFrame(pdata_shared),
featureData = AnnotatedDataFrame(fdata_shared))
ExpressionSet(assayData = assayDataNew("environment", exprs = exprs_shared))
eset_shared <- new("ExpressionSet", assayData = assayDataNew("environment", exprs = exprs_shared),
phenoData = AnnotatedDataFrame(pdata_shared),
featureData = AnnotatedDataFrame(fdata_shared))
rownames(exprs_shared )
shared_genes
rownames(exprs_shared) = shared_genes
rownames(fdata_shared) = shared_genes
eset_shared <- new("ExpressionSet", assayData = assayDataNew("environment", exprs = exprs_shared),
phenoData = AnnotatedDataFrame(pdata_shared),
featureData = AnnotatedDataFrame(fdata_shared))
dim(eset_shared)
saveRDS(eset_shared, "./data/CE_CB/eset_sharedg.rds")
adata <- AnnData(
X = t(exprs(eset_shared)),
obs = pData(eset_shared),
var = fData(eset_shared)
)
library(anndata)
adata <- AnnData(
X = t(exprs(eset_shared)),
obs = pData(eset_shared),
var = fData(eset_shared)
)
library(reticulate)
py_config()
use_condaenv("r-reticulate", required = TRUE)
library(anndata)
eset_shared <- readRDS("./data/CE_CB/eset_sharedg.rds")
use_condaenv("r-reticulate", required = TRUE)
adata <- AnnData(
X = t(exprs(eset_shared)),
obs = pData(eset_shared),
var = fData(eset_shared)
)
eset_shared <- readRDS("./data/CE_CB/eset_sharedg.rds")
use_condaenv("py39", required = TRUE)
adata <- AnnData(
X = t(exprs(eset_shared)),
obs = pData(eset_shared),
var = fData(eset_shared)
)
adata.write_h5ad(paste0("./data/CE_CB/cbce_sharedg.h5ad"))
library(anndata)
adata <- AnnData(
X = t(exprs(eset_shared)),
obs = pData(eset_shared),
var = fData(eset_shared)
)
library(anndata)
library(reticulate)
library(anndata)
library(reticulate)
use_condaenv("py39", required = TRUE)
adata <- AnnData(
X = t(exprs(eset_shared)),
obs = pData(eset_shared),
var = fData(eset_shared)
)
eset_shared <- readRDS("./data/CE_CB/eset_sharedg.rds")
adata <- AnnData(
X = t(exprs(eset_shared)),
obs = pData(eset_shared),
var = fData(eset_shared)
)
adata.write_h5ad(paste0("./data/CE_CB/cbce_sharedg.h5ad"))
library(VisCello)
adata <- AnnData(
X = t(exprs(eset_shared)),
obs = pData(eset_shared),
var = fData(eset_shared)
)
adata.write_h5ad(paste0("./data/CE_CB/cbce_sharedg.h5ad"))
adata <- AnnData(
X = t(exprs(eset_shared)),
obs = pData(eset_shared),
var = fData(eset_shared)
)
adata.write_h5ad(paste0("./data/CE_CB/cbce_sharedg.h5ad"))
adata$write_h5ad(paste0("./data/CE_CB/cbce_sharedg.h5ad"))
library(VisCello)
cello("data/CE_CB/C.elegans_C.briggsae_Embryo_Single_Cell/Cello/")
library(VisCello)
cello("./data/CE_CB/cello_CBCE_processed_Sep22-1526/")
library(VisCello)
cello("data/CE_CB/C.elegans_C.briggsae_Embryo_Single_Cell/Cello/")
cello("./data/CE_CB/cello_CBCE_processed_Sep22-1526/")
library(VisCello)
mtx <- readRDS("./data/mouse_organogenesis/gene_count_cleaned_sampled_100k.RDS")
fmeta <- read.csv("./data/mouse_organogenesis/gene_annotate.csv")
pmeta <- read.csv("./data/mouse_organogenesis/cell_annotate.csv")
rownames(pmeta) <- pmeta$sample
all(colnames(mtx) %in% rownames(pmeta))
mtx[1:10,1:10]
pmeta <- pmeta[colnames(mtx), ]
eset <- new("ExpressionSet", assayData = assayDataNew("environment", exprs = mtx),
phenoData = AnnotatedDataFrame(pmeta),
featureData = AnnotatedDataFrame(fmeta))
head(fmeta)
rownames(fmeta) = make.unique(fmeta$gene_short_name)
rownames(mtx)
rownames(fmeta) = fmeta$gene_id
identical(rownames(fmeta), rownames(mtx))
eset <- new("ExpressionSet", assayData = assayDataNew("environment", exprs = mtx),
phenoData = AnnotatedDataFrame(pmeta),
featureData = AnnotatedDataFrame(fmeta))
saveRDS(eset, "./data/mouse_organogenesis/eset_100k.rds")
library(anndata)
library(reticulate)
head(pData(eset))
use_condaenv("py39", required = TRUE)
main_umap <- pData(eset)[c('Main_trajectory_umap_1', 'Main_trajectory_umap_2', 'Main_trajectory_umap_3')]
main_umap <- pData(eset)[c('Main_trajectory_umap_1', 'Main_trajectory_umap_2', 'Main_trajectory_umap_3')]
main_umap_refined = pData(eset)[c('Main_trajectory_refined_umap_1', 'Main_trajectory_refined_umap_2', 'Main_trajectory_refined_umap_3')]
adata <- AnnData(
X = t(exprs(eset_shared)),
obs = pData(eset_shared),
var = fData(eset_shared),
)
adata <- AnnData(
X = t(exprs(eset)),
obs = pData(eset),
var = fData(eset),
)
adata$obsm[["Original_main_umap"]] <- main_umap
adata$obsm[["Original_main_umap_refined"]] <- main_umap_refined
adata$write_h5ad(paste0("./data/mouse_organogenesis/adata_sampled_100k.h5ad"))
View(pmeta)
View(pmeta)
seu_obj <- readRDS("data/mouse_tome/seurat_object_E6.5.rds")
dim(seu_obj)
head(seu_obj@assays$RNA$counts)
seu_obj@assays$RNA@var.features
seu_obj@reductions
head(seu_obj@meta.data)
seu_obj@meta.data$sample
table(seu_obj@meta.data$group)
seu_obj <- readRDS("data/mouse_tome/seurat_object_E3.5.rds")
table(seu_obj@meta.data$group)
seu_obj <- readRDS("data/mouse_tome/seurat_object_E4.5.rds")
seu_obj <- readRDS("data/mouse_tome/seurat_object_E4.5.rds")
table(seu_obj@meta.data$group)
dim(seu_obj)
seu_obj <- readRDS("data/mouse_tome/seurat_object_E4.5.rds")
table(seu_obj@meta.data$group)
seu_obj <- readRDS("data/mouse_tome/seurat_object_E5.5.rds")
table(seu_obj@meta.data$group)
seu_obj <- readRDS("data/mouse_tome/seurat_object_E7.0.rds")
seu_obj <- readRDS("data/mouse_tome/seurat_object_E7.0.rds")
table(seu_obj@meta.data$group)
seu_obj <- readRDS("data/mouse_tome/seurat_object_E6.5.rds")
table(seu_obj@meta.data$group)
seu_obj <- readRDS("data/mouse_tome/seurat_object_E7.5.rds")
table(seu_obj@meta.data$group)
head(seu_obj@meta.data)
table(seu_obj@meta.data$orig.ident)
?t
mat1 = matrix(rnorm(20), nrow=4)
mat2 = matrix(rnorm(25), nrow=5)
cor(t(mat1),t(mat2))
mat1
mat2
mat1 = matrix(rnorm(20), nrow=4)
mat2 = matrix(rnorm(25), nrow=10)
cor(t(mat1),t(mat2))
mat1 = matrix(rnorm(20), nrow=4)
mat2 = matrix(rnorm(50), nrow=10)
cor(t(mat1),t(mat2))
dim(mat1)
dim(mat2)
library(VisCello)
cello()
library(VisCello)
cello("./save/pbmc3k_Oct06/cello_pbmc3k_pbmc3k_Oct06/")
head(exprs(eset))
cello("./save/pbmc3k_Oct06/cello_pbmc3k_pbmc3k_Oct06/")
library(VisCello)
cello("../data/intestine_dev/cello_concord_Huycke_intestine_concord_Huycke_intestine_Oct14")
cello("./data/intestine_dev/cello_concord_Huycke_intestine_concord_Huycke_intestine_Oct14")
install.packages('IRkernel')
IRkernel::installspec(user = FALSE)
library(VisCello)
cello("./data/Shichen_immune/cello_concord_Shichen_immune_Nov21-1457/")
cello("./data/Shichen_immune/cello_concord_Shichen_immune_Nov21-1457/")
cello("./data/Shichen_immune/cello_concord_Shichen_immune_Nov21-1457/")
library(VisCello)
cello("data/intestine_dev/cello_benchmark_Huycke_Jan06-2307/")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan07-1351/")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan07-1351/")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan07-1351/")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan07-1351/")
install.packages('Seurat')
library(Seurat)
library(VisCello)
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-18464")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-18464")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan07-1351/")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-18464")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-18464")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/")
head(clist$`All cells`@proj$PCA_cc)
head(clist$`All cells`@proj$YMAP_cc)
head(clist$`All cells`@proj$UMAP_cc)
colnames(clist$`All cells`@proj$PCA_cc)
colnames(clist$`All cells`@proj$PCA_cc) = gsub('PCA', 'P_C_A', colnames(clist$`All cells`@proj$PCA_cc))
colnames(clist$`All cells`@proj$PCA_cc)
saveRDS(clist, "data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/clist.rds")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/")
clist$`All cells`@proj$P_CA_cc = clist$`All cells`@proj$PCA_cc
saveRDS(clist, "data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/clist.rds")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/")
install.packages('IRkernel')
IRkernel::installspec()
IRkernel::installspec()
Sys.setenv(PATH = paste("/opt/anaconda3/envs/concord/bin", Sys.getenv("PATH"), sep = ":"))
IRkernel::installspec()
install.packages('anndata')
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/")
library(VisCello)
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324/
")"
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324/")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324/")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324/")
library(VisCello)
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324/")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324/")
library(VisCello)
cello("data/CE_CB/cello_benchmark_CBCE_Jan30-1028/")
names(clist$`All cells`@proj)
keep_proj = strsplit(c('Concord, Concord-decoder, Concord-decoder_UMAP, Concord-decoder_UMAP_3D, Concord_UMAP, Concord_UMAP_3D, Harmony, Harmony_UMAP, Liger, Liger_UMAP, Scanorama, Scanorama_UMAP, Seurat, Seurat_UMAP, Unintegrated, Unintegrated_UMAP, scVI, scVI_UMAP, Contrastive, Contrastive_UMAP'), ", ")
keep_proj
keep_proj = strsplit(c('Concord, Concord-decoder, Concord-decoder_UMAP, Concord-decoder_UMAP_3D, Concord_UMAP, Concord_UMAP_3D, Harmony, Harmony_UMAP, Liger, Liger_UMAP, Scanorama, Scanorama_UMAP, Seurat, Seurat_UMAP, Unintegrated, Unintegrated_UMAP, scVI, scVI_UMAP, Contrastive, Contrastive_UMAP'), ", ")[1]
keep_proj
eep_proj = strsplit(c('Concord, Concord-decoder, Concord-decoder_UMAP, Concord-decoder_UMAP_3D, Concord_UMAP, Concord_UMAP_3D, Harmony, Harmony_UMAP, Liger, Liger_UMAP, Scanorama, Scanorama_UMAP, Seurat, Seurat_UMAP, Unintegrated, Unintegrated_UMAP, scVI, scVI_UMAP, Contrastive, Contrastive_UMAP'), ", ")[[1]]
keep_proj = strsplit(c('Concord, Concord-decoder, Concord-decoder_UMAP, Concord-decoder_UMAP_3D, Concord_UMAP, Concord_UMAP_3D, Harmony, Harmony_UMAP, Liger, Liger_UMAP, Scanorama, Scanorama_UMAP, Seurat, Seurat_UMAP, Unintegrated, Unintegrated_UMAP, scVI, scVI_UMAP, Contrastive, Contrastive_UMAP'), ", ")[[1]]
keep_proj
clist$`All cells`@proj = clist$`All cells`@proj[keep_proj]
names(clist$`All cells`@proj)
saveRDS(clist, "data/CE_CB/cello_benchmark_CBCE_Jan30-1028/clist.rds")
cello(savePath)
cello("data/CE_CB/cello_benchmark_CBCE_Jan30-1028/")
library(VisCello)
cello("data/CE_CB/cello_benchmark_CBCE_Jan30-1028/")
cello("data/CE_CB/cello_benchmark_CBCE_Jan30-1028/")
cello("data/CE_CB/cello_benchmark_CBCE_Jan30-1028/")
pData(eset)$cell = NULL
saveRDS(eset, "data/CE_CB/cello_benchmark_CBCE_Jan30-1028/eset.rds")
cello("data/CE_CB/cello_benchmark_CBCE_Jan30-1028/")
cello("data/CE_CB/cello_benchmark_CBCE_Jan30-1028/")
library(VisCello)
cello("data/CE_CB/cello_benchmark_CBCE_Jan30-1028/")
cello("data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324//")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324//")
library(VisCello)
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324//")
library(VisCello)
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324//")
cello("data/intestine_dev/cello_benchmark_Huycke_Jan08-1324//")
names(clist$`All cells`@proj)
clist$`All cells`@proj['Concord']
clist$`All cells`@proj['Concord_UMAP']
library(VisCello)
cello("../save/pbmc3k_Feb27/cello_pbmc3k_pbmc3k_Feb27-1554")
cello("./save/pbmc3k_Feb27/cello_pbmc3k_pbmc3k_Feb27-1554")
library(VisCello)
cello("./data/intestine_dev/cello_benchmark_Huycke_cc__Jan09-1846/")
cello("./data/intestine_dev/cello_benchmark_Huycke_Jan08-1324/")
